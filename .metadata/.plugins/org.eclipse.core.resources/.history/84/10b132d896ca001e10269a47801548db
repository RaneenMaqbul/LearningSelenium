package Sanity_Testing_Stores;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AddToWaitListStores {
	WebDriver driver;
	@Test(priority=1)
	public void Add_ToWaitList_Stores() throws InterruptedException {
		WebDriver driver = new ChromeDriver();
		driver.manage().window().maximize();
		//Open the Gilt website
		driver.get("https://www.qa.gilt.jp/z/unlock");
		
		
		//Close PopUp
		WebElement PopUP=driver.findElement(By.className("gs-modal-body"));
		WebDriverWait wait1 = new WebDriverWait(driver, Duration.ofSeconds(40));
		wait1.until(ExpectedConditions.visibilityOfElementLocated(By.className("gs-modal-body")));
		PopUP.click();
		
		//Click in Login
		Thread.sleep(2000);
		driver.findElement(By.linkText("ログイン")).click();
		
		//Fill email and password
		WebDriverWait wait2 = new WebDriverWait(driver, Duration.ofSeconds(40));
		wait2.until(ExpectedConditions.visibilityOfElementLocated(By.id("input-email")));
		driver.findElement(By.id("input-email")).sendKeys("rmaqbul@labellevie.jp");
		driver.findElement(By.id("input-password")).sendKeys("Raneen@123456");
		
		//Click in the Login button
		WebElement button = driver.findElement(By.className("gs-item-body"));
		Actions action = new Actions(driver);
		action.click(button).build().perform();
		
		//Make Sure that you are in Login Page by get the title of page
		String actualURL= driver.getTitle();
		String ExpectedURL= "ギルト";
	    Assert.assertEquals(actualURL, ExpectedURL);
	    
	  
        //Click in sale
		Thread.sleep(3000);
		List  <WebElement> allSales = driver.findElements(By.className("gs-lazy-image-container"));
		
		
		for (int i = 0; i <= allSales.size(); i++)
		{
			
			 Actions action4 = new Actions(driver);
			 action4.click(allSales.get(i)).build().perform();
			 break; 
		}
		
		
		//click in size
        boolean Size = driver.findElements(By.cssSelector(".swatch-size")).size() != 0;
		Thread.sleep(2000);
		if (Size==true) {
		WebDriverWait wait5 = new WebDriverWait(driver, Duration.ofSeconds(80));
		wait5.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".swatch-size")));
		Thread.sleep(2000);
		WebElement industries = 
				driver.findElement(By.cssSelector(".swatch-size"));
				List<WebElement> links = industries.findElements(By.tagName("li"));
				for (int i = 0; i <= links.size(); i++)
				{
				    

				    if (links.get(i).getAttribute("class")!=("gs-swatch-unit soldout")) {
				    	continue;
				    }
				    else if(links.get(i).getAttribute("class").equals("gs-swatch-unit soldout")) {
				    Actions action4 = new Actions(driver);
					action4.click(links.get(i)).build().perform();  
				    break;
				    }
				}

		}
		
		//Click in product
				Thread.sleep(3000);
				WebDriverWait wait3 = new WebDriverWait(driver, Duration.ofSeconds(40));
				wait3.until(ExpectedConditions.visibilityOfElementLocated(By.className("gs-lazy-image-container")));
				List  <WebElement> allProducts = driver.findElements(By.className("gs-lazy-image-container"));
				Actions action2 = new Actions(driver);
				action2.click(allProducts.get(0)).build().perform();  
		
				
				
				
				
				
				
				
		/*
		
		//Scroll down to soldout product
		boolean soldout = driver.findElements(By.xpath("//span[text()='売り切れ']")).size() != 0;
		Thread.sleep(2000);
		if (soldout==true) {
			Thread.sleep(2000);
			WebElement soldoutProduct = driver.findElement(By.xpath("//span[text()='売り切れ']"));
			JavascriptExecutor js = (JavascriptExecutor) driver;
			js.executeScript("arguments[0].scrollIntoView(true)", soldoutProduct);	
		}
		else if(soldout==true) {
			
		}*/
		
		
		}
	}
	

